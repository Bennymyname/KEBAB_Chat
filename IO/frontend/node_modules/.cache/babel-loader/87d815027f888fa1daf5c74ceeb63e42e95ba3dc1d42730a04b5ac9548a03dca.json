{"ast":null,"code":"var _jsxFileName = \"/Users/benny/Documents/GitHub/kebab_chat/Kebab_chat/IO/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport axios from 'axios';\nimport jwtDecode from 'jwt-decode';\nimport './App.css'; // Import the CSS file\nimport Login from './Login';\nimport Signup from './Signup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SERVER_IP = 'http://192.168.0.27:4000';\nconst socket = io(SERVER_IP);\nfunction App() {\n  _s();\n  const [msg, setMsg] = useState('');\n  const [userName, setUserName] = useState('');\n  const [chat, setChat] = useState([]);\n  const [file, setFile] = useState(null);\n  const [fileName, setFileName] = useState('');\n  const [preview, setPreview] = useState(null);\n  const [authToken, setAuthToken] = useState(localStorage.getItem('token') || null);\n  const send = e => {\n    e.preventDefault();\n    if (!userName) {\n      alert('Please enter a username');\n      return;\n    }\n    console.log(msg);\n    socket.emit('msg', {\n      userName,\n      msg\n    });\n    setMsg('');\n  };\n  const uploadFile = async e => {\n    e.preventDefault();\n    if (!file) {\n      alert('Please select a file to upload');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('file', file);\n    try {\n      const res = await axios.post(`${SERVER_IP}/upload`, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      if (res.data) {\n        const {\n          fileName,\n          filePath\n        } = res.data;\n        socket.emit('file-upload', {\n          userName,\n          fileName,\n          filePath\n        });\n        setFileName('');\n        setFile(null);\n        setPreview(null);\n        document.getElementById('fileInput').value = null; // Reset file input\n      } else {\n        console.error('No response data');\n      }\n    } catch (err) {\n      console.error('Error uploading file:', err);\n      if (err.response) {\n        console.error('Response error:', err.response.data);\n      }\n    }\n  };\n  const handleFileChange = e => {\n    const selectedFile = e.target.files[0];\n    setFile(selectedFile);\n    setFileName(selectedFile.name);\n    if (selectedFile && selectedFile.type.startsWith('image/')) {\n      const previewUrl = URL.createObjectURL(selectedFile);\n      setPreview(previewUrl);\n    } else {\n      setPreview(null);\n    }\n  };\n  useEffect(() => {\n    if (!authToken) return;\n\n    // Decode token to get username\n    const {\n      userId\n    } = jwtDecode(authToken);\n    setUserName(userId);\n\n    // Add event listener for incoming messages\n    const messageListener = myData => {\n      setChat(prevChat => [...prevChat, myData]);\n    };\n    const fileListener = fileData => {\n      setChat(prevChat => [...prevChat, fileData]);\n    };\n    socket.on('msg', messageListener);\n    socket.on('file-upload', fileListener);\n\n    // Clean up the event listener when the component unmounts\n    return () => {\n      socket.off('msg', messageListener);\n      socket.off('file-upload', fileListener);\n    };\n  }, [authToken]);\n  if (!authToken) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-container\",\n      children: [/*#__PURE__*/_jsxDEV(Signup, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Login, {\n        setAuthToken: setAuthToken\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Chat program using Socket.io\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: send,\n      className: \"chat\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        required: true,\n        placeholder: \"Username here...\",\n        name: \"username\",\n        value: userName,\n        onChange: e => setUserName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        required: true,\n        placeholder: \"Message here...\",\n        name: \"msg\",\n        value: msg,\n        onChange: e => setMsg(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: uploadFile,\n      className: \"chat\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        id: \"fileInput\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatMsg\",\n      children: chat.map((myData, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [myData.msg && /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [myData.userName, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 34\n          }, this), \" \", myData.msg]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 28\n        }, this), myData.fileName && /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [myData.userName, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 17\n          }, this), myData.filePath.match(/\\.(jpeg|jpg|gif|png)$/) != null ? /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `${SERVER_IP}/${myData.fileName}`,\n            alt: myData.fileName,\n            style: {\n              maxWidth: '200px',\n              maxHeight: '200px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 19\n          }, this) : /*#__PURE__*/_jsxDEV(\"a\", {\n            href: `${SERVER_IP}/${myData.fileName}`,\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            children: myData.fileName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"qZwykYEK1ZEYDchKgR9nDWJCH4A=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","io","axios","jwtDecode","Login","Signup","jsxDEV","_jsxDEV","SERVER_IP","socket","App","_s","msg","setMsg","userName","setUserName","chat","setChat","file","setFile","fileName","setFileName","preview","setPreview","authToken","setAuthToken","localStorage","getItem","send","e","preventDefault","alert","console","log","emit","uploadFile","formData","FormData","append","res","post","headers","data","filePath","document","getElementById","value","error","err","response","handleFileChange","selectedFile","target","files","name","type","startsWith","previewUrl","URL","createObjectURL","userId","messageListener","myData","prevChat","fileListener","fileData","on","off","className","children","_jsxFileName","lineNumber","columnNumber","onSubmit","required","placeholder","onChange","id","map","index","match","src","alt","style","maxWidth","maxHeight","href","rel","_c","$RefreshReg$"],"sources":["/Users/benny/Documents/GitHub/kebab_chat/Kebab_chat/IO/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport axios from 'axios';\nimport jwtDecode from 'jwt-decode';\nimport './App.css'; // Import the CSS file\nimport Login from './Login';\nimport Signup from './Signup';\n\nconst SERVER_IP = 'http://192.168.0.27:4000';\nconst socket = io(SERVER_IP);\n\nfunction App() {\n  const [msg, setMsg] = useState('');\n  const [userName, setUserName] = useState('');\n  const [chat, setChat] = useState([]);\n  const [file, setFile] = useState(null);\n  const [fileName, setFileName] = useState('');\n  const [preview, setPreview] = useState(null);\n  const [authToken, setAuthToken] = useState(localStorage.getItem('token') || null);\n\n  const send = (e) => {\n    e.preventDefault();\n    if (!userName) {\n      alert('Please enter a username');\n      return;\n    }\n    console.log(msg);\n    socket.emit('msg', { userName, msg });\n    setMsg('');\n  };\n\n  const uploadFile = async (e) => {\n    e.preventDefault();\n    if (!file) {\n      alert('Please select a file to upload');\n      return;\n    }\n\n    const formData = new FormData();\n    formData.append('file', file);\n\n    try {\n      const res = await axios.post(`${SERVER_IP}/upload`, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n\n      if (res.data) {\n        const { fileName, filePath } = res.data;\n        socket.emit('file-upload', { userName, fileName, filePath });\n        setFileName('');\n        setFile(null);\n        setPreview(null);\n        document.getElementById('fileInput').value = null; // Reset file input\n      } else {\n        console.error('No response data');\n      }\n    } catch (err) {\n      console.error('Error uploading file:', err);\n      if (err.response) {\n        console.error('Response error:', err.response.data);\n      }\n    }\n  };\n\n  const handleFileChange = (e) => {\n    const selectedFile = e.target.files[0];\n    setFile(selectedFile);\n    setFileName(selectedFile.name);\n    \n    if (selectedFile && selectedFile.type.startsWith('image/')) {\n      const previewUrl = URL.createObjectURL(selectedFile);\n      setPreview(previewUrl);\n    } else {\n      setPreview(null);\n    }\n  };\n\n  useEffect(() => {\n    if (!authToken) return;\n\n    // Decode token to get username\n    const { userId } = jwtDecode(authToken);\n    setUserName(userId);\n\n    // Add event listener for incoming messages\n    const messageListener = (myData) => {\n      setChat((prevChat) => [...prevChat, myData]);\n    };\n\n    const fileListener = (fileData) => {\n      setChat((prevChat) => [...prevChat, fileData]);\n    };\n\n    socket.on('msg', messageListener);\n    socket.on('file-upload', fileListener);\n\n    // Clean up the event listener when the component unmounts\n    return () => {\n      socket.off('msg', messageListener);\n      socket.off('file-upload', fileListener);\n    };\n  }, [authToken]);\n\n  if (!authToken) {\n    return (\n      <div className=\"auth-container\">\n        <Signup />\n        <Login setAuthToken={setAuthToken} />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Chat program using Socket.io</h1>\n      <form onSubmit={send} className=\"chat\">\n        <input\n          type=\"text\"\n          required\n          placeholder=\"Username here...\"\n          name=\"username\"\n          value={userName}\n          onChange={(e) => setUserName(e.target.value)}\n        />\n        <input\n          type=\"text\"\n          required\n          placeholder=\"Message here...\"\n          name=\"msg\"\n          value={msg}\n          onChange={(e) => setMsg(e.target.value)}\n        />\n        <button type=\"submit\">Send</button>\n      </form>\n      <form onSubmit={uploadFile} className=\"chat\">\n        <input\n          type=\"file\"\n          id=\"fileInput\"\n          onChange={handleFileChange}\n        />\n        <button type=\"submit\">Upload</button>\n      </form>\n      <div className=\"chatMsg\">\n        {chat.map((myData, index) => (\n          <p key={index}>\n            {myData.msg && <span><strong>{myData.userName}:</strong> {myData.msg}</span>}\n            {myData.fileName && (\n              <span>\n                <strong>{myData.userName}:</strong> \n                {myData.filePath.match(/\\.(jpeg|jpg|gif|png)$/) != null ? (\n                  <img src={`${SERVER_IP}/${myData.fileName}`} alt={myData.fileName} style={{ maxWidth: '200px', maxHeight: '200px' }} />\n                ) : (\n                  <a href={`${SERVER_IP}/${myData.fileName}`} target=\"_blank\" rel=\"noopener noreferrer\">{myData.fileName}</a>\n                )}\n              </span>\n            )}\n          </p>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}