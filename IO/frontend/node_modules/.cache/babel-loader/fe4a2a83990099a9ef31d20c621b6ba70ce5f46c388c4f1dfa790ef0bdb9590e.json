{"ast":null,"code":"var _jsxFileName = \"/Users/benny/Documents/GitHub/kebab_chat/Kebab_chat/IO/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport axios from 'axios';\nimport './App.css'; // Import the CSS file\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SERVER_IP = 'http://192.168.0.27:4000'; // Define server IP address here\nconst socket = io(SERVER_IP);\nfunction App() {\n  _s();\n  const [msg, setMsg] = useState('');\n  const [userName, setUserName] = useState('');\n  const [chat, setChat] = useState([]);\n  const [file, setFile] = useState(null);\n  const [fileName, setFileName] = useState('');\n  const [preview, setPreview] = useState(null);\n  const send = e => {\n    e.preventDefault();\n    if (!userName) {\n      alert('Please enter a username');\n      return;\n    }\n    console.log(msg);\n    socket.emit('msg', {\n      userName,\n      msg\n    });\n    setMsg('');\n  };\n  const uploadFile = async e => {\n    e.preventDefault();\n    if (!file) {\n      alert('Please select a file to upload');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('file', file);\n    try {\n      const res = await axios.post(`${SERVER_IP}/upload`, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      if (res.data) {\n        const {\n          fileName,\n          filePath\n        } = res.data;\n        socket.emit('file-upload', {\n          userName,\n          fileName,\n          filePath,\n          timestamp: new Date().toISOString()\n        });\n        setFileName('');\n        setFile(null);\n        setPreview(null);\n        document.getElementById('fileInput').value = null; // Reset file input\n      } else {\n        console.error('No response data');\n      }\n    } catch (err) {\n      console.error('Error uploading file:', err);\n      if (err.response) {\n        console.error('Response error:', err.response.data);\n      }\n    }\n  };\n  const handleFileChange = e => {\n    const selectedFile = e.target.files[0];\n    setFile(selectedFile);\n    setFileName(selectedFile.name);\n    if (selectedFile && selectedFile.type.startsWith('image/')) {\n      const previewUrl = URL.createObjectURL(selectedFile);\n      setPreview(previewUrl);\n    } else {\n      setPreview(null);\n    }\n  };\n  useEffect(() => {\n    // Add event listener for incoming messages\n    const messageListener = myData => {\n      console.log('Received message data:', myData); // Debug log\n      setChat(prevChat => [...prevChat, myData]);\n    };\n    const fileListener = fileData => {\n      console.log('Received file data:', fileData); // Debug log\n      setChat(prevChat => [...prevChat, fileData]);\n    };\n    socket.on('msg', messageListener);\n    socket.on('file-upload', fileListener);\n\n    // Load chat history\n    socket.on('history', history => {\n      console.log('Received chat history:', history); // Debug log\n      setChat(history);\n    });\n\n    // Clean up the event listener when the component unmounts\n    return () => {\n      socket.off('msg', messageListener);\n      socket.off('file-upload', fileListener);\n      socket.off('history');\n    };\n  }, []);\n  const formatTimestamp = timestamp => {\n    try {\n      if (!timestamp) return 'Invalid Date';\n      const date = new Date(timestamp);\n      return new Intl.DateTimeFormat('ja-JP', {\n        year: 'numeric',\n        month: '2-digit',\n        day: '2-digit',\n        hour: '2-digit',\n        minute: '2-digit',\n        second: '2-digit',\n        timeZone: 'Asia/Tokyo'\n      }).format(date);\n    } catch (error) {\n      console.error('Error formatting timestamp:', error); // Debug log\n      return 'Invalid Date';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Chat program using Socket.io\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: send,\n      className: \"chat\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        required: true,\n        placeholder: \"Username here...\",\n        name: \"username\",\n        value: userName,\n        onChange: e => setUserName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        required: true,\n        placeholder: \"Message here...\",\n        name: \"msg\",\n        value: msg,\n        onChange: e => setMsg(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: uploadFile,\n      className: \"chat\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        id: \"fileInput\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatMsg\",\n      children: chat.map((myData, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [myData.msg && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [myData.userName, \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 23\n            }, this), \" \", myData.msg]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"timestamp\",\n            children: formatTimestamp(myData.timestamp)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true), myData.fileName && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [myData.userName, \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 19\n            }, this), myData.filePath.match(/\\.(jpeg|jpg|gif|png)$/) != null ? /*#__PURE__*/_jsxDEV(\"img\", {\n              src: `${SERVER_IP}/${myData.fileName}`,\n              alt: myData.fileName,\n              style: {\n                maxWidth: '200px',\n                maxHeight: '200px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(\"a\", {\n              href: `${SERVER_IP}/${myData.fileName}`,\n              target: \"_blank\",\n              rel: \"noopener noreferrer\",\n              children: myData.fileName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"timestamp\",\n            children: formatTimestamp(myData.timestamp)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Sa2cRehFvtj52NvIwoO9YGpALUk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","io","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","SERVER_IP","socket","App","_s","msg","setMsg","userName","setUserName","chat","setChat","file","setFile","fileName","setFileName","preview","setPreview","send","e","preventDefault","alert","console","log","emit","uploadFile","formData","FormData","append","res","post","headers","data","filePath","timestamp","Date","toISOString","document","getElementById","value","error","err","response","handleFileChange","selectedFile","target","files","name","type","startsWith","previewUrl","URL","createObjectURL","messageListener","myData","prevChat","fileListener","fileData","on","history","off","formatTimestamp","date","Intl","DateTimeFormat","year","month","day","hour","minute","second","timeZone","format","className","children","_jsxFileName","lineNumber","columnNumber","onSubmit","required","placeholder","onChange","id","map","index","match","src","alt","style","maxWidth","maxHeight","href","rel","_c","$RefreshReg$"],"sources":["/Users/benny/Documents/GitHub/kebab_chat/Kebab_chat/IO/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport axios from 'axios';\nimport './App.css'; // Import the CSS file\n\nconst SERVER_IP = 'http://192.168.0.27:4000'; // Define server IP address here\nconst socket = io(SERVER_IP);\n\nfunction App() {\n  const [msg, setMsg] = useState('');\n  const [userName, setUserName] = useState('');\n  const [chat, setChat] = useState([]);\n  const [file, setFile] = useState(null);\n  const [fileName, setFileName] = useState('');\n  const [preview, setPreview] = useState(null);\n\n  const send = (e) => {\n    e.preventDefault();\n    if (!userName) {\n      alert('Please enter a username');\n      return;\n    }\n    console.log(msg);\n    socket.emit('msg', { userName, msg });\n    setMsg('');\n  };\n\n  const uploadFile = async (e) => {\n    e.preventDefault();\n    if (!file) {\n      alert('Please select a file to upload');\n      return;\n    }\n\n    const formData = new FormData();\n    formData.append('file', file);\n\n    try {\n      const res = await axios.post(`${SERVER_IP}/upload`, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n\n      if (res.data) {\n        const { fileName, filePath } = res.data;\n        socket.emit('file-upload', { userName, fileName, filePath, timestamp: new Date().toISOString() });\n        setFileName('');\n        setFile(null);\n        setPreview(null);\n        document.getElementById('fileInput').value = null; // Reset file input\n      } else {\n        console.error('No response data');\n      }\n    } catch (err) {\n      console.error('Error uploading file:', err);\n      if (err.response) {\n        console.error('Response error:', err.response.data);\n      }\n    }\n  };\n\n  const handleFileChange = (e) => {\n    const selectedFile = e.target.files[0];\n    setFile(selectedFile);\n    setFileName(selectedFile.name);\n    \n    if (selectedFile && selectedFile.type.startsWith('image/')) {\n      const previewUrl = URL.createObjectURL(selectedFile);\n      setPreview(previewUrl);\n    } else {\n      setPreview(null);\n    }\n  };\n\n  useEffect(() => {\n    // Add event listener for incoming messages\n    const messageListener = (myData) => {\n      console.log('Received message data:', myData); // Debug log\n      setChat((prevChat) => [...prevChat, myData]);\n    };\n\n    const fileListener = (fileData) => {\n      console.log('Received file data:', fileData); // Debug log\n      setChat((prevChat) => [...prevChat, fileData]);\n    };\n\n    socket.on('msg', messageListener);\n    socket.on('file-upload', fileListener);\n\n    // Load chat history\n    socket.on('history', (history) => {\n      console.log('Received chat history:', history); // Debug log\n      setChat(history);\n    });\n\n    // Clean up the event listener when the component unmounts\n    return () => {\n      socket.off('msg', messageListener);\n      socket.off('file-upload', fileListener);\n      socket.off('history');\n    };\n  }, []);\n\n  const formatTimestamp = (timestamp) => {\n    try {\n      if (!timestamp) return 'Invalid Date';\n      const date = new Date(timestamp);\n      return new Intl.DateTimeFormat('ja-JP', {\n        year: 'numeric',\n        month: '2-digit',\n        day: '2-digit',\n        hour: '2-digit',\n        minute: '2-digit',\n        second: '2-digit',\n        timeZone: 'Asia/Tokyo'\n      }).format(date);\n    } catch (error) {\n      console.error('Error formatting timestamp:', error); // Debug log\n      return 'Invalid Date';\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Chat program using Socket.io</h1>\n      <form onSubmit={send} className=\"chat\">\n        <input\n          type=\"text\"\n          required\n          placeholder=\"Username here...\"\n          name=\"username\"\n          value={userName}\n          onChange={(e) => setUserName(e.target.value)}\n        />\n        <input\n          type=\"text\"\n          required\n          placeholder=\"Message here...\"\n          name=\"msg\"\n          value={msg}\n          onChange={(e) => setMsg(e.target.value)}\n        />\n        <button type=\"submit\">Send</button>\n      </form>\n      <form onSubmit={uploadFile} className=\"chat\">\n        <input\n          type=\"file\"\n          id=\"fileInput\"\n          onChange={handleFileChange}\n        />\n        <button type=\"submit\">Upload</button>\n      </form>\n      <div className=\"chatMsg\">\n        {chat.map((myData, index) => (\n          <p key={index}>\n            {myData.msg && (\n              <>\n                <span><strong>{myData.userName}:</strong> {myData.msg}</span>\n                <span className=\"timestamp\">{formatTimestamp(myData.timestamp)}</span>\n              </>\n            )}\n            {myData.fileName && (\n              <>\n                <span>\n                  <strong>{myData.userName}:</strong> \n                  {myData.filePath.match(/\\.(jpeg|jpg|gif|png)$/) != null ? (\n                    <img src={`${SERVER_IP}/${myData.fileName}`} alt={myData.fileName} style={{ maxWidth: '200px', maxHeight: '200px' }} />\n                  ) : (\n                    <a href={`${SERVER_IP}/${myData.fileName}`} target=\"_blank\" rel=\"noopener noreferrer\">{myData.fileName}</a>\n                  )}\n                </span>\n                <span className=\"timestamp\">{formatTimestamp(myData.timestamp)}</span>\n              </>\n            )}\n          </p>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}