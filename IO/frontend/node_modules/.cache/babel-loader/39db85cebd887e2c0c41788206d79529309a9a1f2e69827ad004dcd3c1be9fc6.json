{"ast":null,"code":"var _jsxFileName = \"/Users/benny/VisualStudio/2024Spring/Web_info/IO/frontend/chat/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:4000');\nfunction App() {\n  _s();\n  const [msg, setMsg] = useState('');\n  const [chat, setChat] = useState([]);\n  const send = e => {\n    e.preventDefault();\n    console.log(msg);\n    socket.emit('msg', {\n      msg\n    });\n    setMsg('');\n  };\n  useEffect(() => {\n    socket.on('msg', myData => {\n      setChat(prevChat => [...prevChat, myData]);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Chat program using Socket.io\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: send,\n      className: \"chat\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        required: true,\n        placeholder: \"Message here...\",\n        name: \"msg\",\n        value: msg,\n        onChange: e => setMsg(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatMsg\",\n      children: chat.map((myData, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: myData.msg\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"/0rurIBjX0FM1w5QV8X8Nk4BweY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","io","jsxDEV","_jsxDEV","socket","App","_s","msg","setMsg","chat","setChat","send","e","preventDefault","console","log","emit","on","myData","prevChat","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","required","placeholder","name","value","onChange","target","map","index","_c","$RefreshReg$"],"sources":["/Users/benny/VisualStudio/2024Spring/Web_info/IO/frontend/chat/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\n\nconst socket = io('http://localhost:4000');\n\nfunction App() {\n  const [msg, setMsg] = useState('');\n  const [chat, setChat] = useState([]);\n\n  const send = (e) => {\n    e.preventDefault();\n    console.log(msg);\n    socket.emit('msg', { msg });\n    setMsg('');\n  };\n\n  useEffect(() => {\n    socket.on('msg', (myData) => {\n      setChat((prevChat) => [...prevChat, myData]);\n    });\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <h1>Chat program using Socket.io</h1>\n      <form onSubmit={send} className=\"chat\">\n        <input\n          type=\"text\"\n          required\n          placeholder=\"Message here...\"\n          name=\"msg\"\n          value={msg}\n          onChange={(e) => setMsg(e.target.value)}\n        />\n        <button type=\"submit\">Send</button>\n      </form>\n      <div className=\"chatMsg\">\n        {chat.map((myData, index) => (\n          <p key={index}>\n            <span>{myData.msg}</span>\n          </p>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,EAAE,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,MAAM,GAAGH,EAAE,CAAC,uBAAuB,CAAC;AAE1C,SAASI,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAClC,MAAM,CAACU,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMY,IAAI,GAAIC,CAAC,IAAK;IAClBA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBC,OAAO,CAACC,GAAG,CAACR,GAAG,CAAC;IAChBH,MAAM,CAACY,IAAI,CAAC,KAAK,EAAE;MAAET;IAAI,CAAC,CAAC;IAC3BC,MAAM,CAAC,EAAE,CAAC;EACZ,CAAC;EAEDR,SAAS,CAAC,MAAM;IACdI,MAAM,CAACa,EAAE,CAAC,KAAK,EAAGC,MAAM,IAAK;MAC3BR,OAAO,CAAES,QAAQ,IAAK,CAAC,GAAGA,QAAQ,EAAED,MAAM,CAAC,CAAC;IAC9C,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEf,OAAA;IAAKiB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBlB,OAAA;MAAAkB,QAAA,EAAI;IAA4B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrCtB,OAAA;MAAMuB,QAAQ,EAAEf,IAAK;MAACS,SAAS,EAAC,MAAM;MAAAC,QAAA,gBACpClB,OAAA;QACEwB,IAAI,EAAC,MAAM;QACXC,QAAQ;QACRC,WAAW,EAAC,iBAAiB;QAC7BC,IAAI,EAAC,KAAK;QACVC,KAAK,EAAExB,GAAI;QACXyB,QAAQ,EAAGpB,CAAC,IAAKJ,MAAM,CAACI,CAAC,CAACqB,MAAM,CAACF,KAAK;MAAE;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzC,CAAC,eACFtB,OAAA;QAAQwB,IAAI,EAAC,QAAQ;QAAAN,QAAA,EAAC;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/B,CAAC,eACPtB,OAAA;MAAKiB,SAAS,EAAC,SAAS;MAAAC,QAAA,EACrBZ,IAAI,CAACyB,GAAG,CAAC,CAAChB,MAAM,EAAEiB,KAAK,kBACtBhC,OAAA;QAAAkB,QAAA,eACElB,OAAA;UAAAkB,QAAA,EAAOH,MAAM,CAACX;QAAG;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO;MAAC,GADnBU,KAAK;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACJ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACnB,EAAA,CAxCQD,GAAG;AAAA+B,EAAA,GAAH/B,GAAG;AA0CZ,eAAeA,GAAG;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}