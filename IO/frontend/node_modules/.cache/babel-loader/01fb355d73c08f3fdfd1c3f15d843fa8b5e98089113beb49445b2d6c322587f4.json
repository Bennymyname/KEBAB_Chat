{"ast":null,"code":"var _jsxFileName = \"/Users/benny/Documents/GitHub/kebab_chat/Kebab_chat/IO/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport axios from 'axios';\nimport './App.css'; // Import the CSS file\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SERVER_IP = 'http://192.168.0.27:4000'; // Define server IP address here\nconst socket = io(SERVER_IP);\nfunction App() {\n  _s();\n  const [msg, setMsg] = useState('');\n  const [userName, setUserName] = useState('');\n  const [chat, setChat] = useState([]);\n  const [file, setFile] = useState(null);\n  const [fileName, setFileName] = useState('');\n  const [preview, setPreview] = useState(null);\n  const send = e => {\n    e.preventDefault();\n    if (!userName) {\n      alert('Please enter a username');\n      return;\n    }\n    console.log(msg);\n    socket.emit('msg', {\n      userName,\n      msg\n    });\n    setMsg('');\n  };\n  const uploadFile = async e => {\n    e.preventDefault();\n    if (!file) {\n      alert('Please select a file to upload');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('file', file);\n    try {\n      const res = await axios.post(`${SERVER_IP}/upload`, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      if (res.data) {\n        const {\n          fileName,\n          filePath\n        } = res.data;\n        socket.emit('file-upload', {\n          userName,\n          fileName,\n          filePath\n        });\n        setFileName('');\n        setFile(null);\n        setPreview(null);\n        document.getElementById('fileInput').value = null; // Reset file input\n      } else {\n        console.error('No response data');\n      }\n    } catch (err) {\n      console.error('Error uploading file:', err);\n      if (err.response) {\n        console.error('Response error:', err.response.data);\n      }\n    }\n  };\n  const handleFileChange = e => {\n    const selectedFile = e.target.files[0];\n    setFile(selectedFile);\n    setFileName(selectedFile.name);\n    if (selectedFile && selectedFile.type.startsWith('image/')) {\n      const previewUrl = URL.createObjectURL(selectedFile);\n      setPreview(previewUrl);\n    } else {\n      setPreview(null);\n    }\n  };\n  useEffect(() => {\n    // Add event listener for incoming messages\n    const messageListener = myData => {\n      setChat(prevChat => [...prevChat, myData]);\n    };\n    const fileListener = fileData => {\n      setChat(prevChat => [...prevChat, fileData]);\n    };\n    socket.on('msg', messageListener);\n    socket.on('file-upload', fileListener);\n\n    // Load chat history\n    socket.on('history', history => {\n      setChat(history);\n    });\n\n    // Clean up the event listener when the component unmounts\n    return () => {\n      socket.off('msg', messageListener);\n      socket.off('file-upload', fileListener);\n      socket.off('history');\n    };\n  }, []);\n  const formatTimestamp = timestamp => {\n    const date = new Date(timestamp);\n    return new Intl.DateTimeFormat('ja-JP', {\n      year: 'numeric',\n      month: '2-digit',\n      day: '2-digit',\n      hour: '2-digit',\n      minute: '2-digit',\n      second: '2-digit',\n      timeZone: 'Asia/Tokyo'\n    }).format(date);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Chat program using Socket.io\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: send,\n      className: \"chat\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        required: true,\n        placeholder: \"Username here...\",\n        name: \"username\",\n        value: userName,\n        onChange: e => setUserName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        required: true,\n        placeholder: \"Message here...\",\n        name: \"msg\",\n        value: msg,\n        onChange: e => setMsg(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: uploadFile,\n      className: \"chat\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        id: \"fileInput\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatMsg\",\n      children: chat.map((myData, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [myData.msg && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [myData.userName, \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 23\n            }, this), \" \", myData.msg]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"timestamp\",\n            children: formatTimestamp(myData.timestamp)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true), myData.fileName && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [myData.userName, \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 19\n            }, this), myData.filePath.match(/\\.(jpeg|jpg|gif|png)$/) != null ? /*#__PURE__*/_jsxDEV(\"img\", {\n              src: `${SERVER_IP}/${myData.fileName}`,\n              alt: myData.fileName,\n              style: {\n                maxWidth: '200px',\n                maxHeight: '200px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(\"a\", {\n              href: `${SERVER_IP}/${myData.fileName}`,\n              target: \"_blank\",\n              rel: \"noopener noreferrer\",\n              children: myData.fileName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"timestamp\",\n            children: formatTimestamp(myData.timestamp)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Sa2cRehFvtj52NvIwoO9YGpALUk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","io","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","SERVER_IP","socket","App","_s","msg","setMsg","userName","setUserName","chat","setChat","file","setFile","fileName","setFileName","preview","setPreview","send","e","preventDefault","alert","console","log","emit","uploadFile","formData","FormData","append","res","post","headers","data","filePath","document","getElementById","value","error","err","response","handleFileChange","selectedFile","target","files","name","type","startsWith","previewUrl","URL","createObjectURL","messageListener","myData","prevChat","fileListener","fileData","on","history","off","formatTimestamp","timestamp","date","Date","Intl","DateTimeFormat","year","month","day","hour","minute","second","timeZone","format","className","children","_jsxFileName","lineNumber","columnNumber","onSubmit","required","placeholder","onChange","id","map","index","match","src","alt","style","maxWidth","maxHeight","href","rel","_c","$RefreshReg$"],"sources":["/Users/benny/Documents/GitHub/kebab_chat/Kebab_chat/IO/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport axios from 'axios';\nimport './App.css'; // Import the CSS file\n\nconst SERVER_IP = 'http://192.168.0.27:4000'; // Define server IP address here\nconst socket = io(SERVER_IP);\n\nfunction App() {\n  const [msg, setMsg] = useState('');\n  const [userName, setUserName] = useState('');\n  const [chat, setChat] = useState([]);\n  const [file, setFile] = useState(null);\n  const [fileName, setFileName] = useState('');\n  const [preview, setPreview] = useState(null);\n\n  const send = (e) => {\n    e.preventDefault();\n    if (!userName) {\n      alert('Please enter a username');\n      return;\n    }\n    console.log(msg);\n    socket.emit('msg', { userName, msg });\n    setMsg('');\n  };\n\n  const uploadFile = async (e) => {\n    e.preventDefault();\n    if (!file) {\n      alert('Please select a file to upload');\n      return;\n    }\n\n    const formData = new FormData();\n    formData.append('file', file);\n\n    try {\n      const res = await axios.post(`${SERVER_IP}/upload`, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n\n      if (res.data) {\n        const { fileName, filePath } = res.data;\n        socket.emit('file-upload', { userName, fileName, filePath });\n        setFileName('');\n        setFile(null);\n        setPreview(null);\n        document.getElementById('fileInput').value = null; // Reset file input\n      } else {\n        console.error('No response data');\n      }\n    } catch (err) {\n      console.error('Error uploading file:', err);\n      if (err.response) {\n        console.error('Response error:', err.response.data);\n      }\n    }\n  };\n\n  const handleFileChange = (e) => {\n    const selectedFile = e.target.files[0];\n    setFile(selectedFile);\n    setFileName(selectedFile.name);\n    \n    if (selectedFile && selectedFile.type.startsWith('image/')) {\n      const previewUrl = URL.createObjectURL(selectedFile);\n      setPreview(previewUrl);\n    } else {\n      setPreview(null);\n    }\n  };\n\n  useEffect(() => {\n    // Add event listener for incoming messages\n    const messageListener = (myData) => {\n      setChat((prevChat) => [...prevChat, myData]);\n    };\n\n    const fileListener = (fileData) => {\n      setChat((prevChat) => [...prevChat, fileData]);\n    };\n\n    socket.on('msg', messageListener);\n    socket.on('file-upload', fileListener);\n\n    // Load chat history\n    socket.on('history', (history) => {\n      setChat(history);\n    });\n\n    // Clean up the event listener when the component unmounts\n    return () => {\n      socket.off('msg', messageListener);\n      socket.off('file-upload', fileListener);\n      socket.off('history');\n    };\n  }, []);\n\n  const formatTimestamp = (timestamp) => {\n    const date = new Date(timestamp);\n    return new Intl.DateTimeFormat('ja-JP', {\n      year: 'numeric',\n      month: '2-digit',\n      day: '2-digit',\n      hour: '2-digit',\n      minute: '2-digit',\n      second: '2-digit',\n      timeZone: 'Asia/Tokyo'\n    }).format(date);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Chat program using Socket.io</h1>\n      <form onSubmit={send} className=\"chat\">\n        <input\n          type=\"text\"\n          required\n          placeholder=\"Username here...\"\n          name=\"username\"\n          value={userName}\n          onChange={(e) => setUserName(e.target.value)}\n        />\n        <input\n          type=\"text\"\n          required\n          placeholder=\"Message here...\"\n          name=\"msg\"\n          value={msg}\n          onChange={(e) => setMsg(e.target.value)}\n        />\n        <button type=\"submit\">Send</button>\n      </form>\n      <form onSubmit={uploadFile} className=\"chat\">\n        <input\n          type=\"file\"\n          id=\"fileInput\"\n          onChange={handleFileChange}\n        />\n        <button type=\"submit\">Upload</button>\n      </form>\n      <div className=\"chatMsg\">\n        {chat.map((myData, index) => (\n          <p key={index}>\n            {myData.msg && (\n              <>\n                <span><strong>{myData.userName}:</strong> {myData.msg}</span>\n                <span className=\"timestamp\">{formatTimestamp(myData.timestamp)}</span>\n              </>\n            )}\n            {myData.fileName && (\n              <>\n                <span>\n                  <strong>{myData.userName}:</strong> \n                  {myData.filePath.match(/\\.(jpeg|jpg|gif|png)$/) != null ? (\n                    <img src={`${SERVER_IP}/${myData.fileName}`} alt={myData.fileName} style={{ maxWidth: '200px', maxHeight: '200px' }} />\n                  ) : (\n                    <a href={`${SERVER_IP}/${myData.fileName}`} target=\"_blank\" rel=\"noopener noreferrer\">{myData.fileName}</a>\n                  )}\n                </span>\n                <span className=\"timestamp\">{formatTimestamp(myData.timestamp)}</span>\n              </>\n            )}\n          </p>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}